{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { useRef, useState, forwardRef, useImperativeHandle } from 'react';\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { iosBlue, iosDarkPlaceholderGray, iosLightPlaceholderGray } from \"../../../constants/colors\";\nimport SearchIcon from \"../../icons/SearchIcon\";\nimport CancelButton from \"./CancelButton\";\nimport ClearButton from \"./ClearButton\";\nvar SearchBar = forwardRef(function (_ref, ref) {\n  var value = _ref.value,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? 'light' : _ref$theme,\n      _ref$cancelText = _ref.cancelText,\n      cancelText = _ref$cancelText === void 0 ? 'Cancel' : _ref$cancelText,\n      cancelTextStyle = _ref.cancelTextStyle,\n      cancelAccessibilityLabel = _ref.cancelAccessibilityLabel,\n      clearAccessibilityLabel = _ref.clearAccessibilityLabel,\n      _ref$returnKeyType = _ref.returnKeyType,\n      returnKeyType = _ref$returnKeyType === void 0 ? 'search' : _ref$returnKeyType,\n      _ref$selectionColor = _ref.selectionColor,\n      selectionColor = _ref$selectionColor === void 0 ? iosBlue : _ref$selectionColor,\n      _ref$placeholderTextC = _ref.placeholderTextColor,\n      placeholderTextColor = _ref$placeholderTextC === void 0 ? theme === 'light' ? iosLightPlaceholderGray : iosDarkPlaceholderGray : _ref$placeholderTextC,\n      _ref$iconColor = _ref.iconColor,\n      iconColor = _ref$iconColor === void 0 ? placeholderTextColor : _ref$iconColor,\n      leftIcon = _ref.leftIcon,\n      style = _ref.style,\n      inputStyle = _ref.inputStyle,\n      children = _ref.children,\n      onFocus = _ref.onFocus,\n      onChangeText = _ref.onChangeText,\n      onCancel = _ref.onCancel,\n      onClear = _ref.onClear,\n      props = _objectWithoutProperties(_ref, [\"value\", \"theme\", \"cancelText\", \"cancelTextStyle\", \"cancelAccessibilityLabel\", \"clearAccessibilityLabel\", \"returnKeyType\", \"selectionColor\", \"placeholderTextColor\", \"iconColor\", \"leftIcon\", \"style\", \"inputStyle\", \"children\", \"onFocus\", \"onChangeText\", \"onCancel\", \"onClear\"]);\n\n  var _useWindowDimensions = useWindowDimensions(),\n      fontScale = _useWindowDimensions.fontScale;\n\n  var styles = theme === 'light' ? defaultStyles : darkStyles;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      cancelButtonVisible = _useState2[0],\n      setCancelButtonVisible = _useState2[1];\n\n  var inputRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return inputRef.current;\n  });\n\n  var handleFocus = function handleFocus(e) {\n    LayoutAnimation.configureNext(_objectSpread(_objectSpread({}, LayoutAnimation.Presets.easeInEaseOut), {}, {\n      duration: 300\n    }));\n    setCancelButtonVisible(true);\n\n    if (onFocus) {\n      onFocus(e);\n    }\n  };\n\n  var handleClear = function handleClear() {\n    if (onClear) {\n      onClear();\n    }\n\n    onChangeText('');\n  };\n\n  var handleCancel = function handleCancel() {\n    if (onCancel) {\n      onCancel();\n    }\n\n    if (inputRef.current) {\n      handleClear();\n      inputRef.current.blur();\n    }\n\n    LayoutAnimation.configureNext(_objectSpread(_objectSpread({}, LayoutAnimation.Presets.easeInEaseOut), {}, {\n      duration: 300\n    }));\n    setCancelButtonVisible(false);\n  };\n\n  return React.createElement(View, {\n    style: [styles.wrapper, style]\n  }, React.createElement(View, {\n    style: styles.inputWrapper\n  }, React.createElement(TextInput, _extends({\n    ref: inputRef,\n    value: value,\n    clearButtonMode: \"never\",\n    autoCorrect: false,\n    onChangeText: onChangeText,\n    onFocus: handleFocus,\n    returnKeyType: returnKeyType,\n    placeholderTextColor: placeholderTextColor,\n    selectionColor: selectionColor,\n    accessibilityRole: \"search\",\n    accessibilityTraits: \"search\"\n  }, props, {\n    style: [styles.input, {\n      paddingHorizontal: 25 + 10 * fontScale\n    }, inputStyle]\n  })), React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: styles.children\n  }, leftIcon ? React.createElement(View, {\n    style: styles.leftIcon\n  }, leftIcon) : React.createElement(SearchIcon, {\n    color: iconColor,\n    style: styles.leftIcon\n  }), children, value ? React.createElement(ClearButton, {\n    color: iconColor,\n    onPress: handleClear,\n    accessibilityLabel: clearAccessibilityLabel,\n    style: styles.clearButton\n  }) : undefined)), React.createElement(CancelButton, {\n    text: cancelText,\n    visible: cancelButtonVisible,\n    onPress: handleCancel,\n    style: styles.cancelButton,\n    textStyle: cancelTextStyle,\n    accessibilityLabel: cancelAccessibilityLabel\n  }));\n});\nvar defaultStyles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  inputWrapper: {\n    flex: 1\n  },\n  input: {\n    backgroundColor: '#E3E3E9',\n    borderRadius: 12,\n    paddingVertical: 10\n  },\n  children: {\n    position: 'absolute',\n    flexDirection: 'row',\n    width: '100%',\n    height: '100%',\n    alignItems: 'center'\n  },\n  cancelButton: {\n    marginLeft: 10\n  },\n  clearButton: {\n    height: '40%',\n    aspectRatio: 1,\n    marginRight: 10\n  },\n  leftIcon: {\n    marginLeft: 10,\n    marginRight: 'auto',\n    height: '50%',\n    aspectRatio: 1\n  }\n});\nvar darkStyles = StyleSheet.create(_objectSpread(_objectSpread({}, defaultStyles), {}, {\n  input: _objectSpread(_objectSpread({}, defaultStyles.input), {}, {\n    backgroundColor: '#1c1c1f',\n    color: '#FFF'\n  })\n}));\nexport default SearchBar;","map":{"version":3,"sources":["index.tsx"],"names":["SearchBar","forwardRef","theme","cancelText","returnKeyType","selectionColor","placeholderTextColor","iconColor","onClear","props","fontScale","useWindowDimensions","styles","useState","inputRef","useRef","useImperativeHandle","handleFocus","e","LayoutAnimation","duration","setCancelButtonVisible","onFocus","handleClear","onChangeText","handleCancel","onCancel","inputWrapper","paddingHorizontal","children","leftIcon","value","clearButton","cancelAccessibilityLabel","defaultStyles","wrapper","flexDirection","alignItems","flex","input","backgroundColor","borderRadius","paddingVertical","position","width","height","cancelButton","marginLeft","aspectRatio","marginRight","darkStyles","color"],"mappings":"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","sourcesContent":["import React, {\n    useRef,\n    useState,\n    forwardRef,\n    useImperativeHandle,\n} from 'react';\nimport {\n    LayoutAnimation,\n    NativeSyntheticEvent,\n    StyleSheet,\n    TextInput,\n    TextInputFocusEventData,\n    useWindowDimensions,\n    View,\n} from 'react-native';\n\nimport {\n    iosBlue,\n    iosDarkPlaceholderGray,\n    iosLightPlaceholderGray,\n} from '../../../constants/colors';\nimport SearchIcon from '../../icons/SearchIcon';\nimport CancelButton from './CancelButton';\nimport ClearButton from './ClearButton';\n\nimport type { SearchBarProps } from '../../../types';\n\nconst SearchBar = forwardRef<TextInput | null, SearchBarProps>(\n    (\n        {\n            value,\n            theme = 'light',\n            cancelText = 'Cancel',\n            cancelTextStyle,\n            cancelAccessibilityLabel,\n            clearAccessibilityLabel,\n            returnKeyType = 'search',\n            selectionColor = iosBlue,\n            placeholderTextColor = theme === 'light'\n                ? iosLightPlaceholderGray\n                : iosDarkPlaceholderGray,\n            iconColor = placeholderTextColor,\n            leftIcon,\n            style,\n            inputStyle,\n            children,\n            onFocus,\n            onChangeText,\n            onCancel,\n            onClear,\n            ...props\n        },\n        ref\n    ) => {\n        const { fontScale } = useWindowDimensions();\n\n        const styles = theme === 'light' ? defaultStyles : darkStyles;\n        const [cancelButtonVisible, setCancelButtonVisible] = useState(false);\n        const inputRef = useRef<TextInput>(null);\n        useImperativeHandle(ref, () => inputRef.current!);\n\n        const handleFocus = (\n            e: NativeSyntheticEvent<TextInputFocusEventData>\n        ) => {\n            LayoutAnimation.configureNext({\n                ...LayoutAnimation.Presets.easeInEaseOut,\n                duration: 300,\n            });\n            setCancelButtonVisible(true);\n            if (onFocus) {\n                onFocus(e);\n            }\n        };\n\n        const handleClear = () => {\n            if (onClear) {\n                onClear();\n            }\n            // somehow using inputRef.current.clear() doesn't work\n            onChangeText('');\n        };\n\n        const handleCancel = () => {\n            if (onCancel) {\n                onCancel();\n            }\n            if (inputRef.current) {\n                handleClear();\n                inputRef.current.blur();\n            }\n            LayoutAnimation.configureNext({\n                ...LayoutAnimation.Presets.easeInEaseOut,\n                duration: 300,\n            });\n            setCancelButtonVisible(false);\n        };\n\n        return (\n            <View style={[styles.wrapper, style]}>\n                <View style={styles.inputWrapper}>\n                    <TextInput\n                        ref={inputRef}\n                        value={value}\n                        clearButtonMode=\"never\"\n                        autoCorrect={false}\n                        onChangeText={onChangeText}\n                        onFocus={handleFocus}\n                        returnKeyType={returnKeyType}\n                        placeholderTextColor={placeholderTextColor}\n                        selectionColor={selectionColor}\n                        accessibilityRole=\"search\"\n                        accessibilityTraits=\"search\"\n                        {...props}\n                        style={[\n                            styles.input,\n                            { paddingHorizontal: 25 + 10 * fontScale },\n                            inputStyle,\n                        ]}\n                    />\n                    <View pointerEvents=\"box-none\" style={styles.children}>\n                        {leftIcon ? (\n                            <View style={styles.leftIcon}>{leftIcon}</View>\n                        ) : (\n                            <SearchIcon\n                                color={iconColor}\n                                style={styles.leftIcon}\n                            />\n                        )}\n                        {children}\n                        {value ? (\n                            <ClearButton\n                                color={iconColor}\n                                onPress={handleClear}\n                                accessibilityLabel={clearAccessibilityLabel}\n                                style={styles.clearButton}\n                            />\n                        ) : undefined}\n                    </View>\n                </View>\n                <CancelButton\n                    text={cancelText}\n                    visible={cancelButtonVisible}\n                    onPress={handleCancel}\n                    style={styles.cancelButton}\n                    textStyle={cancelTextStyle}\n                    accessibilityLabel={cancelAccessibilityLabel}\n                />\n            </View>\n        );\n    }\n);\n\nconst defaultStyles = StyleSheet.create({\n    wrapper: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    inputWrapper: {\n        flex: 1,\n    },\n    input: {\n        backgroundColor: '#E3E3E9',\n        borderRadius: 12,\n        paddingVertical: 10,\n    },\n    children: {\n        position: 'absolute',\n        flexDirection: 'row',\n        width: '100%',\n        height: '100%',\n        alignItems: 'center',\n    },\n    cancelButton: {\n        marginLeft: 10,\n    },\n    clearButton: {\n        height: '40%',\n        aspectRatio: 1,\n        marginRight: 10,\n    },\n    leftIcon: {\n        marginLeft: 10,\n        marginRight: 'auto',\n        height: '50%',\n        aspectRatio: 1,\n    },\n});\n\nconst darkStyles = StyleSheet.create({\n    ...defaultStyles,\n    input: {\n        ...defaultStyles.input,\n        backgroundColor: '#1c1c1f',\n        color: '#FFF',\n    },\n});\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}