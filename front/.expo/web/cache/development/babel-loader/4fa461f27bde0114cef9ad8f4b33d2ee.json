{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Salle from \"../../data/dataSalle\";\n\nvar CardDetailSalle = function (_React$Component) {\n  _inherits(CardDetailSalle, _React$Component);\n\n  var _super = _createSuper(CardDetailSalle);\n\n  function CardDetailSalle(props) {\n    var _this;\n\n    _classCallCheck(this, CardDetailSalle);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      salle: Salle\n    };\n    return _this;\n  }\n\n  _createClass(CardDetailSalle, [{\n    key: \"render\",\n    value: function render() {\n      var id = this.props.route.params.id;\n      var salleFromState = this.state.salle;\n      var salle = salleFromState[\"\" + (id - 1)];\n      var disponible = salle.reserve;\n\n      var disponibilite = function disponibilite() {\n        if (disponible) {\n          return React.createElement(View, {\n            style: styles.bouton\n          }, React.createElement(Text, {\n            style: styles.txt_bouton\n          }, \"R\\xE9server cette salle\"));\n        } else {\n          return React.createElement(View, {\n            style: styles.bouton\n          }, React.createElement(Text, {\n            style: styles.txt_bouton\n          }, \"Voir les horaires libres\"));\n        }\n      };\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(View, {\n        style: styles.content\n      }, React.createElement(Text, {\n        style: styles.cle\n      }, \"Num\\xE9ro de la salle : \", React.createElement(Text, {\n        style: styles.valeur\n      }, salle.nom)), React.createElement(Text, {\n        style: styles.cle\n      }, \"Capacit\\xE9 de la salle : \", React.createElement(Text, {\n        style: styles.valeur\n      }, salle.capacite, \" personnes\")), React.createElement(Text, {\n        style: styles.cle\n      }, \"Mat\\xE9riel : \", React.createElement(Text, {\n        style: styles.valeur\n      }, \"Projecteur, Tableau, Chaise, Table\")), React.createElement(Text, {\n        style: styles.cle\n      }, \"Disponibilit\\xE9 (aujourd'hui): \", React.createElement(Text, {\n        style: styles.valeur\n      }, disponible ? \"encore disponible\" : \"déjà réservé pour aujourd'hui\"))), React.createElement(TouchableOpacity, null, disponibilite()));\n    }\n  }]);\n\n  return CardDetailSalle;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#0E4452',\n    width: '100%',\n    alignItems: 'center'\n  },\n  content: {\n    marginHorizontal: 30,\n    marginVertical: 100,\n    height: 300,\n    padding: 15,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: '#FF8038'\n  },\n  cle: {\n    color: '#FF8038',\n    fontSize: 20,\n    paddingVertical: 8\n  },\n  valeur: {\n    color: 'white',\n    fontSize: 20,\n    paddingVertical: 8\n  },\n  bouton: {\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    width: '100%',\n    borderRadius: 16,\n    backgroundColor: '#FF8038',\n    borderColor: '#FF8038'\n  },\n  txt_bouton: {\n    textAlign: 'center',\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#0E4452'\n  }\n});\nexport default CardDetailSalle;","map":{"version":3,"sources":["/home/dama/Documents/My passion/workflow/projet/gestion/front/composants/cards/CardDetailSalle.js"],"names":["React","Salle","CardDetailSalle","props","state","salle","id","route","params","salleFromState","disponible","reserve","disponibilite","styles","bouton","txt_bouton","container","content","cle","valeur","nom","capacite","Component","StyleSheet","create","flex","flexDirection","backgroundColor","width","alignItems","marginHorizontal","marginVertical","height","padding","borderWidth","borderRadius","borderColor","color","fontSize","paddingVertical","paddingHorizontal","textAlign","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet, View, TouchableOpacity, Text } from 'react-native'\n\nimport Salle from '../../data/dataSalle';\n\nclass CardDetailSalle extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = { salle: Salle } \n    }\n\n  \n  render(){\n    const { id } = this.props.route.params;\n    const salleFromState = this.state.salle;\n    const salle = salleFromState[`${id - 1}`]\n    const disponible = salle.reserve;\n\n     const disponibilite = () =>{\n      if(disponible){\n        return(\n          <View  style={styles.bouton} >\n              <Text style={styles.txt_bouton} >Réserver cette salle</Text>\n          </View>\n        )\n      } else{\n        return(\n          <View  style={styles.bouton} >\n            <Text style={styles.txt_bouton} >Voir les horaires libres</Text>\n          </View>\n        )\n      }\n    };\n\n    return (\n        <View style={styles.container}>\n           <View style={styles.content} >\n                <Text style={styles.cle} >\n                  Numéro de la salle : <Text style={styles.valeur} >{salle.nom}</Text>\n               </Text>\n               <Text style={styles.cle} > \n                 Capacité de la salle : <Text style={styles.valeur} >{salle.capacite} personnes</Text>\n               </Text>\n               <Text style={styles.cle} >\n                 Matériel : <Text style={styles.valeur} >Projecteur, Tableau, Chaise, Table</Text>\n               </Text>\n               <Text style={styles.cle} >\n                 Disponibilité (aujourd'hui): <Text style={styles.valeur} >{disponible ? \"encore disponible\" : \"déjà réservé pour aujourd'hui\"}</Text>\n               </Text>\n          </View>\n          <TouchableOpacity>\n            {disponibilite()}\n          </TouchableOpacity>\n        </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#0E4452',\n    width: '100%', \n    alignItems: 'center'\n  },\n  content: {\n    marginHorizontal: 30,\n    marginVertical: 100,\n    height: 300,\n    padding: 15,\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: '#FF8038'\n  },\n  cle: {\n    color: '#FF8038',\n    fontSize: 20,\n    paddingVertical: 8,\n  },\n  valeur: {\n    color: 'white',\n    fontSize: 20, \n    paddingVertical: 8,\n  },\n  bouton: {\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    width: '100%',\n    borderRadius: 16, \n    backgroundColor: '#FF8038',\n    borderColor: '#FF8038'\n  },\n  txt_bouton: {\n    textAlign: 'center',\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#0E4452'\n  }\n})\n\nexport default CardDetailSalle;"]},"metadata":{},"sourceType":"module"}